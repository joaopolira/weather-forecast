import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.20'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.20'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.20'
}

group = 'com.meteorology'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('springCloudVersion', "2023.0.0-RC1")
	set('testcontainers.version', "1.19.3")
	set('resilience4jVersion', "2.0.0")
	set('circuitBreakerVersion', "2.1.0")
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

dependencies {
	// spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// kotlin
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'

	// database
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	runtimeOnly 'org.postgresql:postgresql'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation 'org.testcontainers:postgresql'
	implementation 'org.springframework.cloud:spring-cloud-contract-wiremock'
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '21'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
